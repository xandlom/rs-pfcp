#!/bin/bash

# Basic PFCP compatibility test
# Tests if Go can parse PFCP messages generated by Rust

echo "=== Basic PFCP Compatibility Test ==="
echo "Testing if go-pfcp can parse messages from rs-pfcp"
echo ""

# Check if Go is available
if ! command -v go &>/dev/null; then
    echo "Error: Go is not installed or not in PATH"
    exit 1
fi

# Check if cargo is available
if ! command -v cargo &>/dev/null; then
    echo "Error: Cargo (Rust) is not installed or not in PATH"
    exit 1
fi

# Build simple Go server
echo "Building simple Go server..."
go build -o simple-server simple-server.go
if [ $? -ne 0 ]; then
    echo "Error: Failed to build simple Go server"
    exit 1
fi

echo "Simple Go server built successfully"
echo ""

# Start simple Go server in background
echo "Starting simple Go PFCP server (message parser only)..."
./simple-server -addr "127.0.0.1:8805" &
SERVER_PID=$!

# Give server time to start
sleep 2

# Check if server started successfully
if ! kill -0 $SERVER_PID 2>/dev/null; then
    echo "Error: Simple Go server failed to start"
    exit 1
fi

echo "Simple Go server started with PID: $SERVER_PID"
echo ""

# Run Rust client (it will send PFCP messages to the Go server)
echo "Running Rust PFCP client to send messages to Go server..."
echo "The Go server will attempt to parse the messages..."
cd ..

# Run with timeout to avoid hanging
timeout 30s cargo run --example session-client -- --sessions 1
CLIENT_EXIT_CODE=$?

# Cleanup: Kill the server
echo ""
echo "Cleaning up..."
kill $SERVER_PID 2>/dev/null
wait $SERVER_PID 2>/dev/null

if [ $CLIENT_EXIT_CODE -eq 124 ]; then
    echo ""
    echo "⚠️  Test timed out (30 seconds)"
    echo "This might indicate protocol compatibility issues or the Go server"
    echo "doesn't send proper responses back to the Rust client."
elif [ $CLIENT_EXIT_CODE -eq 0 ]; then
    echo ""
    echo "✅ SUCCESS: Basic PFCP message parsing compatibility verified"
    echo "   - Go server successfully parsed messages from Rust client"
    echo "   - Cross-implementation PFCP protocol parsing confirmed"
else
    echo ""
    echo "❌ FAILURE: Basic compatibility test failed"
    echo "   - Exit code: $CLIENT_EXIT_CODE"
    exit 1
fi

echo ""
echo "Note: This test only verifies basic message parsing compatibility."
echo "For full session lifecycle testing, run the comprehensive tests:"
echo "  ./test-all-compatibility.sh"
echo "  ./test-go-server-rust-client.sh"  
echo "  ./test-rust-server-go-client.sh"